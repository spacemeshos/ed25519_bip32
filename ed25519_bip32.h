/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdarg>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <ostream>
#include <new>



extern "C" {

/// derive_key_c does the same thing as the above function, but is intended for use over the CFFI.
/// note that the caller must free() the returned memory as it's not managed/freed here.
uint8_t *derive_key_c(const uint8_t *seed, size_t seedlen, const uint8_t *path, size_t pathlen);

/// free the memory allocated and returned by derive_key_c by transferring ownership back to Rust.
/// must be called on the pointer returned by derive_key_c precisely once to ensure safety.
void derive_key_free_c(uint8_t *ptr);

} // extern "C"
